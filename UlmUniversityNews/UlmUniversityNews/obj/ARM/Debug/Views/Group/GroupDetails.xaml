<Page
    x:Class="UlmUniversityNews.Views.Group.GroupDetails"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.Group"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    x:Name="pageRoot"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:GroupTypeToStringConverter x:Key="GroupTypeToStringConverter" />
        <valueconverter:ChannelTermToLocalizedStringConverter x:Key="ChannelTermToLocalizedStringConverter" />
        <valueconverter:ResourceDetailsDateTimeToStringConverter x:Key="ResourceDetailsDateTimeToStringConverter" />
        <valueconverter:GroupToGroupAdminStringConverter x:Key="GroupToGroupAdminStringConverter" />
        <valueconverter:ParticipantsListToStringConverter x:Key="ParticipantsListToStringConverter" />
        <valueconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <valueconverter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <valueconverter:ListCountToVisibilityConverter x:Key="ListCountToVisibilityConverter" />
        <valueconverter:ZeroIntegerToVisibilityConverter x:Key="ZeroIntegerToVisibilityConverter" />
        <valueconverter:ConversationToIconPathConverter x:Key="ConversationToIconPathConverter" />
        <valueconverter:BallotToIconPathConverter x:Key="BallotToIconPathConverter" />

        <!-- Layout eines Eintrages einer Konversations-Ressource in der Detailansicht einer Gruppe.-->
        <DataTemplate x:Key="ConversationListItemStyle">
            <!-- Margin ist angepasst an den des PivotItem (der PivotItem Margin wird implizit angewandt,
                da sich die Auflistung innerhalb davon befindet.).-->
            <Grid 
                Background="{StaticResource UniUlmAccentColorListItemBackground}"
                Margin="0,0,0,5">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <!-- Spalte für Icon-->
                    <ColumnDefinition Width="*" />
                    <!-- Spalte für restliche Information-->
                </Grid.ColumnDefinitions>

                <!-- Icon -->
                <Image Source="{Binding Converter={StaticResource ConversationToIconPathConverter}}" 
                       Grid.Column="0"
                       Margin="5, 5, 0, 5"
                       Height="70px"
                       Width="70px"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
                <!-- TODO - remove hard coded sizes of icons-->

                <!-- andere Informationen -->
                <Grid Grid.Column="1" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- Zeile für Name der Konversation und Icon für Anzahl ungelesener Nachrichten. -->
                        <RowDefinition Height="*" />
                        <!-- Zeile für Konversationsadmin -->
                    </Grid.RowDefinitions>

                    <!-- Zeile 1 -->
                    <!-- Anzeige für Name und Icon für ungelsesen Nachrichten -->
                    <Grid Grid.Row="0" VerticalAlignment="Top" Margin="0, 7, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <!-- Name -->
                        <TextBlock Grid.Column="0"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Left"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"
                               x:Name="ConversationTitle"
                               Style="{StaticResource ListTextStyle}"
                               FontWeight="Bold"
                               Text="{Binding Title}"/>

                        <!-- Anzahl ungelesener Nachrichten -->
                        <Grid
                            Grid.Column="1"
                            x:Name="UnreadConversationMessagesIcon"
                            Visibility="{Binding AmountOfUnreadMessages, FallbackValue=Collapsed, TargetNullValue=Collapsed, Converter={StaticResource ZeroIntegerToVisibilityConverter}}">
                            <Ellipse 
                                Fill="Gray" 
                                Height="33px"
                                Width="33px"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                            <!-- Hintergrund der Anzeige der ungelesenen Nachrichten-->
                            <TextBlock 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Foreground="White"
                                FontSize="15"
                                TextWrapping="NoWrap"
                                TextAlignment="Center"
                                Text="{Binding AmountOfUnreadMessages}"/>
                        </Grid>
                    </Grid>

                    <!-- Zeile 2 -->
                    <!-- Anzeige von Konversationsadmin -->
                    <Grid Grid.Row="1"
                          x:Name="ConversationAdmin"
                          VerticalAlignment="Bottom"
                          Margin="0, 0, 0, 7" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Typ -->
                        <TextBlock Grid.Column="0" 
                                   x:Name="ConversationAdminField" 
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource ListTextStyle}"
                                   Text="{Binding AdminName}"/>
                    </Grid>

                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Layout eines Eintrages einer Abstimmungs-Ressource in der Detailansicht einer Gruppe.-->
        <DataTemplate x:Key="BallotListItemStyle">
            <!-- Margin ist angepasst an den des PivotItem (der PivotItem Margin wird implizit angewandt,
                da sich die Auflistung innerhalb davon befindet.).-->
            <Grid 
                Background="{StaticResource UniUlmAccentColorListItemBackground}"
                Margin="0,0,0,5">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <!-- Spalte für Icon-->
                    <ColumnDefinition Width="*" />
                    <!-- Spalte für restliche Information-->
                </Grid.ColumnDefinitions>

                <!-- Icon -->
                <Image Source="{Binding Converter={StaticResource BallotToIconPathConverter}}" 
                       Grid.Column="0"
                       Margin="5, 5, 0, 5"
                       Height="70px"
                       Width="70px"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
                <!-- TODO - remove hard coded sizes of icons-->

                <!-- andere Informationen -->
                <Grid Grid.Column="1" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- Zeile für Name der Abstimmung -->
                        <RowDefinition Height="*" />
                        <!-- Zeile für Abstimmungssadmin -->
                    </Grid.RowDefinitions>

                    <!-- Zeile 1 -->
                    <!-- Anzeige für Name -->
                    <Grid Grid.Row="0" VerticalAlignment="Top" Margin="0, 7, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Name -->
                        <TextBlock Grid.Column="0"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Left"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"
                               x:Name="BallotTitle"
                               Style="{StaticResource ListTextStyle}"
                               FontWeight="Bold"
                               Text="{Binding Title}"/>
                    </Grid>

                    <!-- Zeile 2 -->
                    <!-- Anzeige von Abstimmungsadmin -->
                    <Grid Grid.Row="1"
                          x:Name="BallotAdmin"
                          VerticalAlignment="Bottom"
                          Margin="0, 0, 0, 7" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Typ -->
                        <TextBlock Grid.Column="0" 
                                   x:Name="BallotAdminField" 
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource ListTextStyle}"
                                   Text="{Binding AdminName}"/>
                    </Grid>

                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StatusBarInformationToLocalizedStringConverter}}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="ChannelSettingsCommandBar"
						Foreground="{StaticResource UNUCommandBarButtonColor}"
						Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton
                x:Name="GroupDetailsDeleteGroupLocallyButton"
                x:Uid="GroupDetailsDeleteGroupLocallyButton"
                Icon="Delete"
                Label="lösche lokal"
                Visibility="{Binding ElementName=GroupDetailsDeleteGroupLocallyButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding DeleteGroupLocallyCommand}"
                />
            <AppBarButton
                x:Name="GroupDetailsDeleteGroupButton"
                x:Uid="GroupDetailsDeleteGroupButton"
                Icon="Delete"
                Label="löschen"
                Visibility="{Binding HasDeleteOption, Converter={StaticResource BooleanToVisibilityConverter}}">
                <AppBarButton.Flyout>
                    <Flyout FlyoutPresenterStyle="{StaticResource FlyoutStyle}">
                        <Grid
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Warnhinweis bezüglich Gruppe löschen. -->
                            <TextBlock 
                                Grid.Row="0"
                                x:Name="DeleteGroupWarning"
                                x:Uid="GroupDetailsDeleteGroupWarning"
                                Style="{StaticResource TextInFlyoutsStyle}" >
                                Wollen Sie die Gruppe wirklich löschen?
                            </TextBlock>

                            <!-- Verlassen Button-->
                            <Button
                                Grid.Row="1"
                                x:Name="DeleteGroupFlyoutButton"
                                x:Uid="GroupDetailsDeleteGroupFlyoutButton"
                                Style="{StaticResource FlyoutSingleButtonStyle}"
                                Content="Löschen"
                                Command="{Binding DeleteGroupCommand}">
                            </Button>
                        </Grid>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Name="GroupDetailsSynchronizeButton"
                x:Uid="GroupDetailsSynchronizeButton"
                Icon="Sync"
                Label="synchronisieren"
                Visibility="{Binding IsGroupParticipant, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding SynchronizeDataCommand}"/>
            <AppBarButton 
                x:Name="GroupDetailsGroupSettingsButton"
                x:Uid="GroupDetailsGroupSettingsButton"
                Icon="Setting"
                Label="einstellungen"
                Visibility="{Binding ElementName=GroupDetailsGroupSettingsButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding ChangeToGroupSettingsCommand}"/>
            <AppBarButton
                x:Name="GroupDetailsAddConversationButton"
                x:Uid="GroupDetailsAddConversationButton"
                Icon="Add"
                Label="hinzufügen"
                Visibility="{Binding ElementName=GroupDetailsAddConversationButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding ChangeToAddConversationDialog}"
                />
            <AppBarButton x:ConnectionId='1' 
                x:Name="GroupDetailsJoinGroupButton"
                x:Uid="GroupDetailsJoinGroupButton"
                Icon="Favorite"
                Label="beitreten"
                Visibility="{Binding IsGroupParticipant, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse'}"
                                                         
                />
            <AppBarButton 
                x:Name="GroupDetailsEditGroupButton"
                x:Uid="GroupDetailsEditGroupButton"
                Icon="Edit"
                Label="bearbeiten"
                Visibility="{Binding ElementName=GroupDetailsEditGroupButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding EditGroupCommand}"/>
            
            <!-- Secondary commands -->
            <CommandBar.SecondaryCommands>
                <AppBarButton
                x:Name="GroupDetailsLeaveGroupButton"
                x:Uid="GroupDetailsLeaveGroupButton"
                Icon="UnFavorite"
                Label="verlassen"
                Visibility="{Binding HasLeaveOption, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <AppBarButton.Flyout>
                        <Flyout FlyoutPresenterStyle="{StaticResource FlyoutStyle}">
                            <Grid
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Warnhinweis bezüglich Gruppe verlassen. -->
                                <TextBlock 
                                Grid.Row="0"
                                x:Name="LeaveGroupWarning"
                                x:Uid="GroupDetailsLeaveGroupWarning"
                                Style="{StaticResource TextInFlyoutsStyle}" >
                                Wollen Sie die Gruppe wirklich verlassen?
                                </TextBlock>

                                <!-- Verlassen Button-->
                                <Button
                                Grid.Row="1"
                                x:Name="LeaveGroupFlyoutButton"
                                x:Uid="GroupDetailsLeaveGroupFlyoutButton"
                                Style="{StaticResource FlyoutSingleButtonStyle}"
                                Content="Verlassen"
                                Command="{Binding LeaveGroupCommand}">
                                </Button>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
    
    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:ConnectionId='3' x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					                              />

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!-- Drawer Text -->
                <TextBlock Grid.Column="0"
						   x:Uid="GroupDetailsDrawerText"
						   Style="{StaticResource DrawerTextStyle}"
						   Text="{Binding SelectedGroup.Name, TargetNullValue='Gruppendetails', FallbackValue='Gruppendetails'}" />
                
                <!-- Teilnehmer entfernt Hinweis -->
                <TextBlock Grid.Column="1"
                           x:Uid="GroupDetailsParticipantRemovedHint"
                           Style="{StaticResource DrawerTextStyle}"
                           Text=""
                           Visibility="{Binding IsRemovedFromGroup, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
            
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Pivot x:ConnectionId='2' x:Name="GroupDetailsPivot"
                       x:Uid="GroupDetailsPivot"
                                                                            
                       HeaderTemplate="{StaticResource PivotItemHeaderStyle}"
                       SelectedIndex="{Binding SelectedPivotItemIndex, Mode=TwoWay}">
                    
                    <!-- Pivotitem 1 - Konversationen -->
                    <PivotItem                      
                        TabIndex="1"
                        Name="ConversationPivotItem"
                        x:Uid="GroupDetailsConversationPivotItem"
                        Style="{StaticResource PivotItemStyle}"
                        Header="Konversationen">
                        
                        <!-- Blende dieses PivotItem aus, wenn Nutzer nicht Teilnehmer der Gruppe ist.-->
                        <i:Interaction.Behaviors>
                            <common:HideablePivotItemBehavior x:Name="HidablePivotItemBehaviorElementConversations" Visible="{Binding IsGroupParticipant, UpdateSourceTrigger=PropertyChanged}" />
                        </i:Interaction.Behaviors>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Text, der angezeigt wird, wenn keine Konversationen vorhanden sind. -->
                            <TextBlock
                                Grid.Row="0"
                                x:Name="NoConversationsInGroupInfo"
                                x:Uid="GroupDetailsNoConversationsInGroupInfo"
                                Style="{StaticResource UniversityNewsUlmStandardText}" 
                                Visibility="{Binding ConversationCollection.Count, Converter={StaticResource ListCountToVisibilityConverter}}">
                                    In dieser Gruppe sind noch keine Konversationen vorhanden.
                            </TextBlock>

                            <!-- Definiere Liste für Konversationen. -->
                            <!-- Beachte, IsItemClickEnabled muss explizit aktiviert werden, sonst funktioniert das Binding auf das Command über das Behaviour nicht.-->
                            <ListView
                                Grid.Row="1"
                                ItemTemplate="{StaticResource ConversationListItemStyle}"
                                ItemsSource="{Binding ConversationCollection}"
                                IsItemClickEnabled="True"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ItemClick">
                                        <core:InvokeCommandAction Command="{Binding ConversationSelectedCommand}"
                                                              InputConverter="{StaticResource ItemClickedConverter}" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </ListView>
                        </Grid>

                    </PivotItem>
                    
                    <!-- Pivotitem 2 - Abstimmungen -->
                    <PivotItem
                        TabIndex="2"
                        Name="BallotsPivotItem"
                        x:Uid="GroupDetailsBallotPivotItem"
                        Style="{StaticResource PivotItemStyle}"
                        Header="Abstimmungen">

                        <!-- Blende dieses PivotItem aus, wenn Nutzer nicht Teilnehmer der Gruppe ist.-->
                        <i:Interaction.Behaviors>
                            <common:HideablePivotItemBehavior x:Name="HidablePivotItemBehaviorElementBallots" Visible="{Binding IsGroupParticipant, UpdateSourceTrigger=PropertyChanged}" />
                        </i:Interaction.Behaviors>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Text, der angezeigt wird, wenn keine Abstimmungen vorhanden sind. -->
                            <TextBlock
                                Grid.Row="0"
                                x:Name="NoBallotsInGroupInfo"
                                x:Uid="GroupDetailsNoBallotsInGroupInfo"
                                Style="{StaticResource UniversityNewsUlmStandardText}" 
                                Visibility="{Binding BallotCollection.Count, Converter={StaticResource ListCountToVisibilityConverter}}">
                                    In dieser Gruppe sind noch keine Abstimmungen vorhanden.
                            </TextBlock>

                            <!-- Definiere Liste für Abstimmungen. -->
                            <!-- Beachte, IsItemClickEnabled muss explizit aktiviert werden, sonst funktioniert das Binding auf das Command über das Behaviour nicht.-->
                            <ListView
                                Grid.Row="1"
                                ItemTemplate="{StaticResource BallotListItemStyle}"
                                ItemsSource="{Binding BallotCollection}"
                                IsItemClickEnabled="True"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ItemClick">
                                        <core:InvokeCommandAction Command="{Binding ConversationSelectedCommand}"
                                                              InputConverter="{StaticResource ItemClickedConverter}" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </ListView>

                        </Grid>

                    </PivotItem>
                    
                    <!-- Pivotitem 3 - Gruppendetails -->
                    <PivotItem
                        TabIndex="3"
                        Name="GroupDetailsPivotItem"
                        x:Uid="GroupDetailsGroupInfoPivotItem"
                        Style="{StaticResource PivotItemStyle}"
                        Header="Gruppeninformationen">

                        <ScrollViewer 
                            VerticalScrollBarVisibility="Auto">

                            <!-- Elemente mit Gruppeninformationen -->
                            <!-- Grid mit Gruppendaten. -->
                            <Grid
                                Grid.Row="0"
                                x:Name="GroupDetailsGroupInfoMainGrid"
                                DataContext="{Binding SelectedGroup, TargetNullValue={x:Null}, UpdateSourceTrigger=PropertyChanged}"
                                HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                    <!-- Gruppenname -->
                                    <Grid
                                        Grid.Row="0"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Icon und Title für Gruppenname. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_info_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsGroupNameField"
                                                x:Name="GroupName"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Name"
                                                />
                                        </Grid>

                                        <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupNameContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding Name, TargetNullValue='', FallbackValue=''}" />

                                        <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Gruppentyp -->
                                    <Grid
                                        Grid.Row="1"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                    <!-- Icon und Title für Gruppentyp. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_details_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsGroupTypeField"
                                                x:Name="GroupType"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Typ" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupTypeContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding Type, Converter={StaticResource GroupTypeToStringConverter}, TargetNullValue='', FallbackValue=''}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Gruppenbeschreibung -->
                                    <Grid
                                        Grid.Row="2"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                    <!-- Icon und Title für Gruppenbeschreibung. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_info_outline_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsDescriptionField"
                                                x:Name="GroupDescription"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Beschreibung"/>
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupDescriptionContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding Description, TargetNullValue='', FallbackValue=''}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Semester -->
                                    <Grid
                                        Grid.Row="3"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Icon und Title für Semester. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_date_range_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsTermField"
                                                x:Name="GroupTerm"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Semester" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupTermContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding Term, TargetNullValue='', FallbackValue='', Converter={StaticResource ChannelTermToLocalizedStringConverter}}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Erstellungsdatum -->
                                    <Grid
                                        Grid.Row="4"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Icon und Title für Erstellungsdatum. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_today_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsCreationDateField"
                                                x:Name="GroupCreationDate"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Erstellungsdatum" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupCreationDateContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding CreationDate, TargetNullValue='', FallbackValue='', Converter={StaticResource ResourceDetailsDateTimeToStringConverter}}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Änderungsdatum -->
                                    <Grid
                                        Grid.Row="5"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>


                                        <!-- Icon und Title für Änderungsdatum. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_event_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsModificationDateField"
                                                x:Name="GroupModificationDate"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Änderungsdatum" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupModificationDateContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding ModificationDate, TargetNullValue='', FallbackValue='', Converter={StaticResource ResourceDetailsDateTimeToStringConverter}}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Gruppen-Admin -->
                                    <Grid
                                        Grid.Row="6"
                                        Visibility="{Binding ElementName=GroupAdminContent, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                    <!-- Icon und Title für Gruppen-Admin. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_account_circle_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsGroupAdminField"
                                                x:Name="GroupAdmin"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Administrator" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupAdminContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding TargetNullValue='', FallbackValue='', Converter={StaticResource GroupToGroupAdminStringConverter}}" /> <!-- Binding to Group itself (which is the dataContext)-->

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                    <!-- Teilnehmer der Gruppe -->
                                    <Grid
                                        Grid.Row="7"
                                        Visibility="{Binding ElementName=GroupParticipantsContent, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                        Style="{StaticResource EnumerationOfPropertiesGridStyle}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Icon und Title für Teilnehmer. -->
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0"
                                                   Source="/Assets/ResourceDetails/ic_group_black_36dp.png"
                                                   Style="{StaticResource EnumerationOfPropertiesIconStyle}"
                                                   />

                                            <TextBlock
                                                Grid.Column="1"
                                                x:Uid="GroupDetailsParticipantsField"
                                                x:Name="GroupParticipants"
                                                Style="{StaticResource HeaderTextInPropertyDescriptions}"
                                                Text="Teilnehmer" />
                                        </Grid>

                                    <TextBlock
                                            Grid.Row="1"
                                            x:Name="GroupParticipantsContent"
                                            Style="{StaticResource TextInPropertyDescriptions}"
                                            Text="{Binding Participants, TargetNullValue='', FallbackValue='', Converter={StaticResource ParticipantsListToStringConverter}}" />

                                    <Line Grid.Row="2"
                                              Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
                                    </Grid>

                                </Grid>
                                <!-- Ende Grid für Gruppendaten. -->
                           </ScrollViewer>
                    </PivotItem>

                    <!-- Pivotitem 4 - Events -->
                    <PivotItem
                        TabIndex="4"
                        Name="EventsPivotItem"
                        x:Uid="GroupDetailsEventsPivotItem"
                        Style="{StaticResource PivotItemStyle}"
                        Header="Events">

                        <!-- Blende dieses PivotItem aus, wenn Nutzer nicht Teilnehmer der Gruppe ist.-->
                        <i:Interaction.Behaviors>
                            <common:HideablePivotItemBehavior x:Name="HidablePivotItemBehaviorElementEvents" Visible="{Binding IsGroupParticipant, UpdateSourceTrigger=PropertyChanged}" />
                        </i:Interaction.Behaviors>

                        <!--TODO-->
                    </PivotItem>
                </Pivot>
            </Grid>

            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
							  ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
							  IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
																  InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>

        <!-- Content Dialog for password entry.-->
        <ContentDialog
            x:Uid="GroupDetailsPasswordEntryDialog"
            x:Name="GroupDetailsPasswordEntryDialog"
            VerticalAlignment="Stretch"
            Title="PasswordEntry"
            PrimaryButtonCommand="{Binding JoinGroupCommand}"
            PrimaryButtonText="Join"
            SecondaryButtonText="Cancel"
            MaxWidth="{Binding ActualWidth, ElementName=pageRoot}">
            <StackPanel>
                <TextBlock
                    x:Name="GroupDetailsPasswordEntryDescription"
                    x:Uid="GroupDetailsPasswordEntryDescription"
                    Style="{StaticResource ContentDialogTextStyle}"
                    Text="Bitte geben Sie das Passwort für die Gruppe an." />
                <PasswordBox 
                    x:Name="GroupDetailsPasswordEntryInputBox"
                    x:Uid="GroupDetailsPasswordEntryInputBox"
                    Header="Password"
                    Password="{Binding EnteredPassword, Mode=TwoWay}"/>
            </StackPanel>
        </ContentDialog>

    </Grid>
</Page>

