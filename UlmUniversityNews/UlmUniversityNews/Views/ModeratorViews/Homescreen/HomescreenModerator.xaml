<Page
    x:Class="UlmUniversityNews.Views.ModeratorViews.Homescreen.HomescreenModerator"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.ModeratorViews.Homescreen"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="HomescreenModeratorCommandBar"
                    Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton x:Name="HomescreenModeratorAddChannelButton"
                          x:Uid="HomescreenModeratorAddChannelButton"
                          Label="add channel"
                          Icon="Add"
                          Command="{Binding SwitchToAddChannelDialogCommand}"/> 
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <!-- Drawer Text -->
            <TextBlock Grid.Column="1"
						   x:Uid="ModeratorHomescreenPageTitle"
						   Style="{StaticResource DrawerTextStyle}"
						   Text="Homescreen" />
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Pivot x:Name="HomescreenModeratorPivot"
                       x:Uid="HomescreenModeratorPivot"
                       HeaderTemplate="{StaticResource PivotItemHeaderStyle}">
                    <!-- Pivotelement 1 -->
                    <PivotItem
                        x:Uid="HomescreenModeratorMyChannelsPivotItem"
                        Style="{StaticResource PivotItemStyle}"
                        Header="Meine Kanäle">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            
                            <TextBlock
                                Grid.Row="0"
                                x:Name="HomescreenModeratorNoManagedChannelsInfo"
                                x:Uid="HomescreenModeratorNoManagedChannelsInfo"
                                Style="{StaticResource UniversityNewsUlmStandardText}"
                                Text=""
                                Visibility="Collapsed"
                                />  <!-- TODO - Bind visiblity, so that the text will be visible if the list is empty. Use ListCountToVisibilityConverter.-->

                            <!-- Definiere Liste für verwaltete Kanäle. -->
                            <!-- Beachte, IsItemClickEnabled muss explizit aktiviert werden, sonst funktioniert das Binding auf das Command über das Behaviour nicht.-->
                            <ListView
                                Grid.Row="1"
                                ItemTemplate="{StaticResource ChannelListItemStyle}"
                                ItemsSource="{Binding ManagedChannels}"
                                IsItemClickEnabled="True"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ItemClick">
                                        <core:InvokeCommandAction Command="{Binding ChannelSelected}"
                                                              InputConverter="{StaticResource ItemClickedConverter}" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </ListView>
                        </Grid>

                    </PivotItem>
                </Pivot>
            </Grid>


            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
							  ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
							  IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
																  InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>
    </Grid>
</Page>
