<Page
    x:Class="UlmUniversityNews.Views.ModeratorViews.AddAnnouncementDialog.AddAnnouncement"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.ModeratorViews.AddAnnouncementDialog"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
    xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:ChannelToDrawerMenuBackgroundConverter x:Key="ChannelToDrawerMenuBackgroundConverter" />
        <valueconverter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <valueconverter:ValidationMessageOnLocalizedStringConverter x:Key="ValidationMessageOnLocalizedStringConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="AddAnnouncementDialogCommandBar"
                    Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton
                x:Name="AddAnnouncementDialogSendMessageButton"
                x:Uid="AddAnnouncementDialogSendMessageButton"
                Icon="Send"
                Label="senden"
                Command="{Binding CreateNewAnnouncementCommand}"/> 
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}"
                           Background="{Binding SelectedChannel, Converter={StaticResource ChannelToDrawerMenuBackgroundConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <!-- Drawer Text -->
            <TextBlock Grid.Column="1"
						   x:Uid="AddAnnouncementDialogDrawerTitle"
						   Style="{StaticResource DrawerTextStyle}"
						   Text="{Binding SelectedChannel.Name, FallbackValue='New Message', TargetNullValue='New message', UpdateSourceTrigger=PropertyChanged}" />
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <ScrollViewer>
                    <Grid Margin="19, 12, 19, 0">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <!-- Überschrift -->
                    <TextBlock Grid.Row="0"
                               x:Name="AddAnnouncementDialogTitle"
                               x:Uid="AddAnnouncementDialogTitle"
                               Style="{StaticResource UniversityNewsUlmPivotHeaderLikeText}"
                               Text="Nachricht hinzufügen" />
                    
                    <!-- Grid für Beschreibung und Felder für Anlegen der neuen Nachricht. -->
                        <Grid
                            Grid.Row="1"
                            Margin="0, 14.5, 0, 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <TextBlock Grid.Row="0"
                                       x:Name="AddAnnouncementDialogDescription"
                                       x:Uid="AddAnnouncementDialogDescription"
                                       Style="{StaticResource UniversityNewsUlmStandardText}"
                                       Text="Füllen Sie die unten aufgeführten Felder aus und klicken Sie anschließend auf senden, um die Nachricht an die Abonnenten des Kanals zu senden. Die mit * gekennzeichneten Felder sind Pflichtfelder." />
                            
                            <!-- Titel der Nachricht -->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <TextBox Grid.Row="0"
                                     x:Name="AddAnnouncementDialogTitleTextBox"
                                     x:Uid="AddAnnouncementDialogTitleTextBox"
                                     InputScope="AlphanumericFullWidth"
                                     Header="Titel *"
                                     Text="{Binding AnnouncementTitle, Mode=TwoWay}"/>

                                <TextBlock Grid.Row="1"
                                           x:Name="AddAnnouncementDialogTitleTextBoxValidationError"
                                           Visibility="{Binding ElementName=AddAnnouncementDialogTitleTextBoxValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                           Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                           Text="{Binding ValidationMessages[Title], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}" />
                            </Grid>
                            
                            <!--<StackPanel Grid.Row="1"
                                        Orientation="Vertical">
                                <TextBox x:Name="AddAnnouncementDialogTitleTextBox"
                                     x:Uid="AddAnnouncementDialogTitleTextBox"
                                     InputScope="AlphanumericFullWidth"
                                     Header="Titel *" />

                                <TextBlock x:Name="AddAnnouncementDialogTitleTextBoxValidationError"
                                           Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                           Text="" />
                            </StackPanel>-->
                            
                            <!-- Priorität der Nachricht -->
                            <ComboBox Grid.Row="2"
                                      x:Name="AddAnnouncementDialogPriorityComboBox"
                                      x:Uid="AddAnnouncementDialogPriorityComboBox"
                                      Header="Priorität *"
                                      SelectedIndex="0">
                                <ComboBoxItem x:Name="AddAnnouncementDialogPriorityComboBoxItemPrioNormal"
                                              x:Uid="AddAnnouncementDialogPriorityComboBoxItemPrioNormal"
                                              Content="Normal"
                                              IsSelected="{Binding IsMessagePriorityNormalSelected, Mode=TwoWay}"/> 
                                <ComboBoxItem x:Name="AddAnnouncementDialogPriorityComboBoxItemPrioHigh"
                                              x:Uid="AddAnnouncementDialogPriorityComboBoxItemPrioHigh"
                                              Content="Hoch"
                                              IsSelected="{Binding IsMessagePriorityHighSelected, Mode=TwoWay}" /> 
                            </ComboBox>
                            
                            <!-- Inhalt der Nachricht-->
                            <Grid Grid.Row="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <TextBox Grid.Row="0" 
                                     x:Name="AddAnnouncementDialogContentTextBox"
                                     x:Uid="AddAnnouncementDialogContentTextBox"
                                     InputScope="AlphanumericFullWidth"
                                     Header="Nachrichteninhalt *"
                                     MinHeight="120"
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     Text="{Binding AnnouncementContent, Mode=TwoWay}"/>

                                <TextBlock Grid.Row="1" 
                                           x:Name="AddAnnouncementDialogContentTextBoxValidationError"
                                           Visibility="{Binding ElementName=AddAnnouncementDialogContentTextBoxValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                           Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                           Text="{Binding ValidationMessages[Text], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}" />
                            </Grid>
                            
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </Grid>


            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
							  ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
							  IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
																  InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>
    </Grid>
</Page>
