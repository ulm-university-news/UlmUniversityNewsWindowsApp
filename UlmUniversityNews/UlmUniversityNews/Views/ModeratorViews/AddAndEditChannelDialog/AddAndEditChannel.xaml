<Page
    x:Class="UlmUniversityNews.Views.ModeratorViews.AddAndEditChannelDialog.AddAndEditChannel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.ModeratorViews.AddAndEditChannelDialog"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <valueconverter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <valueconverter:ChannelToDrawerMenuBackgroundConverter x:Key="ChannelToDrawerMenuBackgroundConverter" />
        <valueconverter:ValidationMessageOnLocalizedStringConverter x:Key="ValidationMessageOnLocalizedStringConverter" />
        
        <!-- Konvertierung von einem Wert des Enums ChannelType auf den entsprechenden ComboBoxItem Index und umgekehrt.-->
        <valueconverter:ChannelTypeEnumToComboBoxItemIndexConverter x:Key="ChannelTypeEnumToComboBoxItemIndexConverter" />

        <!-- Konvertierung von einem Wert des Enums Faculty auf den entsprechenden ComboBoxItem Index und umgekehrt. -->
        <valueconverter:FacultyEnumToComboBoxItemIndexConverter x:Key="FacultyEnumToComboBoxItemIndexConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="AddAndEditChannelCommandBar"
                    Foreground="{StaticResource UNUCommandBarButtonColor}"
                    Background="{Binding EditableChannel, Converter={StaticResource ChannelToDrawerMenuBackgroundConverter}}">
            <AppBarButton
                x:Name="AddAndEditChannelAddChannelButton"
                x:Uid="AddAndEditChannelAddChannelButton"
                Icon="Accept"
                Label="kanal anlegen"
                Visibility="{Binding IsAddChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding AddChannelCommand}"
                />
            <AppBarButton
                x:Name="AddAndEditChannelEditChannelButton"
                x:Uid="AddAndEditChannelEditChannelButton"
                Icon="Save"
                Label="speichern"
                Visibility="{Binding IsEditChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding EditChannelCommand}"
                />
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}"
              Background="{Binding EditableChannel, Converter={StaticResource ChannelToDrawerMenuBackgroundConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <!-- Drawer Text -->
            <TextBlock Grid.Column="1"
						   x:Uid="AddAndEditChannelAddChannelTitle"
						   Style="{StaticResource DrawerTextStyle}"
                           Visibility="{Binding IsAddChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
						   Text="Kanal anlegen" /> <!-- Title per Binding? Vllt eher zwei TextBlöcke und über die Visibility das regeln. -->
        
            <TextBlock Grid.Column="1"
                       x:Uid="AddAndEditChannelEditChannelTitle"
                       Style="{StaticResource DrawerTextStyle}"
                       Visibility="{Binding IsEditChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <ScrollViewer>
                    <!-- Der Inhalt der eigentlichen Seite kommt hier rein. -->
                    <Grid x:Name="AddAndEditChannelMainGrid"
                          Style="{StaticResource PivotLikeGridStyle}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Beschreibung für Add Channel. -->
                        <TextBlock
                            Grid.Row="0"
                            x:Name="AddAndEditChannelDescriptionAddChannel"
                            x:Uid="AddAndEditChannelDescriptionAddChannel"
                            Style="{StaticResource UniversityNewsUlmStandardText}"
                            Visibility="{Binding IsAddChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Text="Geben Sie die Daten des neuen Kanals an. Sie können zwischen verschiedenen Kanaltypen wählen. Abhängig vom Kanaltyp wird die Vorlage angepasst und Sie erhalten für den Typ relevante Datenfelder. Die mit einem * gekennzeichneten Felder sind Pflichtfelder."
                            />

                        <!-- Beschreibung für Edit Channel. -->
                        <TextBlock
                            Grid.Row="0"
                            x:Name="AddAndEditChannelDescriptionEditChannel"
                            x:Uid="AddAndEditChannelDescriptionEditChannel"
                            Style="{StaticResource UniversityNewsUlmStandardText}"
                            Visibility="{Binding IsEditChannelDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                            />

                        <!-- Name des Kanals - Eingabefeld. -->
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                Grid.Row="0"
                                x:Name="AddAndEditChannelNameTextBox"
                                x:Uid="AddAndEditChannelNameTextBox"
                                InputScope="AlphanumericFullWidth"
                                Header="Name *"
                                Text="{Binding ChannelName, Mode=TwoWay}" />

                            <TextBlock
                                Grid.Row="1"
                                x:Name="AddAndEditChannelNameValidationError"
                                Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                Visibility="{Binding ElementName=AddAndEditChannelNameValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                Text="{Binding ValidationMessages[Name], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>

                        <!-- Typ des Kanals. -->
                        <ComboBox Grid.Row="2"
                                  x:Name="AddAndEditChannelTypeComboBox"
                                  x:Uid="AddAndEditChannelTypeComboBox"
                                  IsEnabled="{Binding IsAddChannelDialog}"
                                  SelectedIndex="{Binding SelectedChannelType, Mode=TwoWay, Converter={StaticResource ChannelTypeEnumToComboBoxItemIndexConverter}}"
                                  Header="Kanaltyp *"> <!-- Ist nur aktiv, wenn es sich um einen AddChannel Dialog handelt. -->
                            <ComboBoxItem
                                x:Name="AddAndEditChannelTypeOtherItem"
                                x:Uid="AddAndEditChannelTypeOtherItem"
                                Content="Sonstige"
                                />
                            <ComboBoxItem
                                x:Name="AddAndEditChannelTypeLectureItem"
                                x:Uid="AddAndEditChannelTypeLectureItem"
                                Content="Vorlesung" 
                                />
                            <ComboBoxItem
                                x:Name="AddAndEditChannelTypeEventItem"
                                x:Uid="AddAndEditChannelTypeEventItem"
                                Content="Event"
                                />
                            <ComboBoxItem 
                                x:Name="AddAndEditChannelTypeSportsItem"
                                x:Uid="AddAndEditChannelTypeSportsItem"
                                Content="Sport"
                                />
                            <ComboBoxItem 
                                x:Name="AddAndEditChannelTypeStudentGroupItem"
                                x:Uid="AddAndEditChannelTypeStudentGroupItem"
                                Content="Studentengruppe"
                                />
                        </ComboBox>

                        <!-- Semester des Kanals -->
                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Sommer- oder Wintersemester + Jahreszahl-->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ComboBox Grid.Column="0"
                                          x:Name="AddAndEditChannelTermComboBox"
                                          x:Uid="AddAndEditChannelTermComboBox"
                                          SelectedIndex="0"
                                          Header="Semester *">
                                    <ComboBoxItem 
                                        x:Name="AddAndEditChannelTermSummerItem"
                                        x:Uid="AddAndEditChannelTermSummerItem"
                                        Content="Sommersemester"
                                        IsSelected="{Binding IsSummerTermSelected, Mode=TwoWay}"
                                        />
                                    <ComboBoxItem 
                                        x:Name="AddAndEditChannelTermWinterItem"
                                        x:Uid="AddAndEditChannelTermWinterItem"
                                        Content="Wintersemester"
                                        IsSelected="{Binding IsWinterTermSelected, Mode=TwoWay}"
                                        />
                                </ComboBox>

                                <TextBox Grid.Column="1"
                                         x:Name="AddAndEditChannelTermYear"
                                         x:Uid="AddAndEditChannelTermYear"
                                         InputScope="Number"
                                         Header="Jahr *"
                                         Margin="5, 0, 0, 0"
                                         MaxLength="4"
                                         Text="{Binding TermYear, Mode=TwoWay}"
                                         />
                            </Grid>

                            <TextBlock
                                Grid.Row="1"
                                x:Name="AddAndEditChannelTermValidationError"
                                Style="{StaticResource UniversityNewsUlmStandardErrorText}" 
                                Visibility="{Binding ElementName=AddAndEditChannelTermValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                Text="{Binding ValidationMessages[Term], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>

                        <!-- Kanalbeschreibung -->
                        <Grid Grid.Row="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                Grid.Row="0"
                                x:Name="AddAndEditChannelDescriptionTextBlock"
                                x:Uid="AddAndEditChannelDescriptionTextBlock"
                                InputScope="AlphanumericFullWidth"
                                TextWrapping="Wrap"
                                AcceptsReturn="True"
                                Header="Beschreibung"
                                Text="{Binding ChannelDescription, Mode=TwoWay}"
                                />

                            <TextBlock
                                Grid.Row="1"
                                x:Name="AddAndEditChannelDescriptionValidationError"
                                Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                Visibility="{Binding ElementName=AddAndEditChannelDescriptionValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                Text="{Binding ValidationMessages[Description], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}" 
                                />
                        </Grid>
                        
                        <!-- Felder, die spezifisch sind für Typ "Vorlesung"-->
                        <Grid Grid.Row="5"
                              Visibility="{Binding LectureSpecificFieldsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"> <!-- Ausblenden bei anderem Typ -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <!-- Fakultät -->
                            <ComboBox Grid.Row="0"
                                      x:Name="AddAndEditChannelLectureFacultyComboBox"
                                      x:Uid="AddAndEditChannelLectureFacultyComboBox"
                                      IsEnabled="{Binding IsAddChannelDialog}"
                                      SelectedIndex="{Binding SelectedFaculty, Converter={StaticResource FacultyEnumToComboBoxItemIndexConverter}}"
                                      Header="Fakultät *">    <!-- Ist nur aktiv, wenn es sich um einen AddChannel Dialog handelt. -->
                                <ComboBoxItem 
                                    x:Name="AddAndEditChannelLectureFacultyNaturalScienceItem"
                                    x:Uid="AddAndEditChannelLectureFacultyNaturalScienceItem"
                                    Content="Fakultät für Naturwissenschaften"/>
                                <ComboBoxItem 
                                    x:Name="AddAndEditChannelLectureFacultyEngineering"
                                    x:Uid="AddAndEditChannelLectureFacultyEngineering"
                                    Content="Fakultät für Ingenieurwissenschaften, Informatik, und Psychologie"
                                    />
                                <ComboBoxItem
                                    x:Name="AddAndEditChannelLectureFacultyMathematics"
                                    x:Uid="AddAndEditChannelLectureFacultyMathematics"
                                    Content="Fakultät für Mathematik und Wirtschaftswissenschaften"
                                    />
                                <ComboBoxItem
                                    x:Name="AddAndEditChannelLectureFacultyMedicines"
                                    x:Uid="AddAndEditChannelLectureFacultyMedicines"
                                    Content="Medizinische Fakultät" 
                                    />
                            </ComboBox>
                            
                            <!-- Dozent -->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelLecturerTextBox"
                                    x:Uid="AddAndEditChannelLecturerTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Dozent *"
                                    Text="{Binding Lecturer, Mode=TwoWay}" /> 

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelLecturerValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelLecturerValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Lecturer], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                            
                            <!-- Übungsleiter -->
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelAssistantTextBox"
                                    x:Uid="AddAndEditChannelAssistantTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Übungsleiter"
                                    Text="{Binding Assistant, Mode=TwoWay}" /> 

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelAssistantValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelAssistantValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Assistant], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                            
                            <!-- Start-Termin -->
                            <Grid Grid.Row="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelStartDateTextBox"
                                    x:Uid="AddAndEditChannelStartDateTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    Header="Termin Vorlesungsbeginn"
                                    Text="{Binding LectureStartDate, Mode=TwoWay}" />  

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelStartDateValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelStartDateValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[StartDate], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                            
                            <!-- Ende-Termin -->
                            <Grid Grid.Row="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelEndDateTextBox"
                                    x:Uid="AddAndEditChannelEndDateTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    Header="Termin Vorlesungsende"
                                    Text="{Binding LectureEndDate, Mode=TwoWay}" />  

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelEndDateValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelEndDateValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[EndDate], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                        </Grid> <!-- Ende Grid für spezifische "Vorlesungs"-Datenfelder. -->
                        
                        <!-- Grid für Datenfelder, die spezifisch für Typ "Event" sind -->
                        <Grid Grid.Row="6"
                              Visibility="{Binding EventSpecificFieldsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Eintrittskosten Event -->
                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelEventCostTextBox"
                                    x:Uid="AddAndEditChannelEventCostTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Eintrittskosten"
                                    Text="{Binding EventCost, Mode=TwoWay}" />

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelEventCostValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelEventCostValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Cost], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                            
                            <!-- Organisator des Events -->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelEventOrganizerTextBox"
                                    x:Uid="AddAndEditChannelEventOrganizerTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Organisator"
                                    Text="{Binding EventOrganizer, Mode=TwoWay}" 
                                    />
                                
                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelEventOrganizerValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelEventOrganizerValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Organizer], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                        </Grid> <!-- Ende Grid für Datenfelder von Typ "Event" -->
                        
                        <!-- Grid für Datenfelder, die spezifisch für "Sport"-Kanäle sind. -->
                        <Grid Grid.Row="7"
                              Visibility="{Binding SportsSpecificFieldsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Kosten Sportgruppe -->
                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelSportsCostTextBox"
                                    x:Uid="AddAndEditChannelSportsCostTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Kosten"
                                    Text="{Binding SportsCost, Mode=TwoWay}" /> 

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelSportsCostValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelSportsCostValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Cost], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>

                            <!-- Anzahl Teilnehmer -->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelSportsAmountOfParticipantsTextBox"
                                    x:Uid="AddAndEditChannelSportsAmountOfParticipantsTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Anzahl Teilnehmer"
                                    Text="{Binding AmountOfParticipants, Mode=TwoWay}" />

                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelSportsAmountOfParticipantsValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelSportsAmountOfParticipantsValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[NumberOfParticipants], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                            </Grid>
                        </Grid> <!-- Ende Grid für "Sport"-spezifische Datenfelder. -->
                        
                        <!-- Zeiten / Termine -->
                        <Grid Grid.Row="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelDatesTextBox"
                                    x:Uid="AddAndEditChannelDatesTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Termine"
                                    Text="{Binding Dates, Mode=TwoWay}" /> 

                            <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelDatesValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelDatesValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Dates], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>
                        
                        <!-- Lokalitäten / Orte  -->
                        <Grid Grid.Row="9">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelLocationsTextBox"
                                    x:Uid="AddAndEditChannelLocationsTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Ort"
                                    Text="{Binding Locations, Mode=TwoWay}" />  

                            <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelLocationsValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelLocationsValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Locations], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>
                        
                        <!-- Webseite -->
                        <Grid Grid.Row="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelWebsiteTextBox"
                                    x:Uid="AddAndEditChannelWebsiteTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    Header="Webseite"
                                    Text="{Binding Website, Mode=TwoWay}" /> 

                            <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelWebsiteValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelWebsiteValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Website], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>
                        
                        <!-- Kontakt -->
                        <Grid Grid.Row="11">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditChannelContactsTextBox"
                                    x:Uid="AddAndEditChannelContactsTextBox"
                                    InputScope="AlphanumericFullWidth"
                                    Header="Kontakt *"
                                    Text="{Binding Contacts, Mode=TwoWay}" />

                            <TextBlock
                                    Grid.Row="1"
                                    x:Name="AddAndEditChannelContactsValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditChannelContactsValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" 
                                    Text="{Binding ValidationMessages[Contacts], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                                />
                        </Grid>

                    </Grid>   <!-- Ende von AddAndEditChannelMainGrid-->
                </ScrollViewer>
            </Grid>

            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                 <!--Flyout für Warnung "Dialog verlassen."--> 
                <FlyoutBase.AttachedFlyout>
                    <Flyout                    
                        FlyoutPresenterStyle="{StaticResource ResourceKey=FlyoutStyle}"
                            common:FlyoutHelper.IsOpen="{Binding IsFlyoutOpen, Mode=TwoWay}"
                            common:FlyoutHelper.Parent="{Binding ElementName=ListFragment}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                x:Uid="FlyoutWarningDialogCloseDescription"
                                Text="Achtung! Wenn Sie den Dialog verlassen werden die von Ihnen eingetragenen Daten gelöscht."
                                Style="{StaticResource TextInFlyoutsStyle}"/>
                            <Button
                                Grid.Row="1"
                                x:Uid="FlyoutWariningDialogCloseButton"
                                Content="Dialog verlassen"
                                Command="{Binding PerformOriginalDrawerMenuActionCommand}"
                                Style="{StaticResource FlyoutSingleButtonStyle}" />
                        </Grid>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>

                <ListView     
                    x:Name="ListMenuItems"
					ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
					IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Öffne das Flyout beim Klick auf das Command. Übergibt den geklickten DrawerMenuEntry.--> 
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding ShowWarningFlyout}"
                                                      InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>
        
    </Grid>
</Page>
