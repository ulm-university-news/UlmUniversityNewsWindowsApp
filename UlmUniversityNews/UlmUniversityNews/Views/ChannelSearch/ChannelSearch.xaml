<Page
    x:Class="UlmUniversityNews.Views.ChannelSearch.ChannelSearch"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.ChannelSearch"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converter="using:UlmUniversityNews.Converters"
    xmlns:common="using:UlmUniversityNews.Common"
    xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <!-- Ressourcen dieser Seite-->
    <Page.Resources>
        <converter:ItemClickedConverter x:Key="ItemClickedConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StatusBarInformationToLocalizedStringConverter}}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="ChannelSearchCommandBar"
                    Foreground="{StaticResource UNUCommandBarButtonColor}"
                    Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton
                x:Name="ChannelSearchSynchronizeChannelsButton"
                x:Uid="ChannelSearchSynchronizeChannelsButton"
                Label="aktualisieren"
                Icon="Sync"
                Command="{Binding SynchronizeChannelsCommand}"/>
            <AppBarToggleButton 
                x:Name="OrderByChannelType"
                x:Uid="ChannelSearchOrderByChannelTypeButton"
                Label="order by type"
                Icon="Shuffle"
                IsChecked="{Binding OrderByTypeChecked, Mode=TwoWay}"
                Command="{Binding ReorderChannelsCommand}" />
            <AppBarButton 
                x:Name="ChannelSearchStartSearchButton"
                x:Uid="ChannelSearchStartSearchButton"
                Icon="Find"
                Label="search"
                Command="{Binding StartChannelSearchCommand}"
                />
        </CommandBar>
    </Page.BottomAppBar>

    <!-- Layout Root -->
    <Grid x:Name="LayoutRoot">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
                   Grid.Column="0"
                   Style="{StaticResource DrawerIconStyle}"
                   Tapped="DrawerIcon_Tapped" />

            <!-- Drawer Text -->
            <TextBlock Grid.Column="1"
                       x:Uid="ChannelSearchPageTitle"
                       Style="{StaticResource DrawerTextStyle}"
                       Text="ChannelSearchDefault" />
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">
            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" /> 
                </Grid.RowDefinitions>
                <!-- Search Bar -->
                <StackPanel
                    Grid.Row="0"
                    Background="{StaticResource UniUlmAccentColorElementBackground}"
                    Height="Auto">
                    <Grid
                        VerticalAlignment="Top"
                        Height="60"
                        Margin="19, 0, 19, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Background="White"
                            Grid.Column="0"
                            x:Name="ChannelSearchBox"
                            x:Uid="ChannelSearchInputBox"
                            KeyDown="ChannelSearchBox_KeyDown"
                            GotFocus="ChannelSearchBox_GotFocus"
                            LostFocus="ChannelSearchBox_LostFocus"
                            InputScope="Search"            
                            Text="{Binding SearchTerm, FallbackValue='', TargetNullValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                        
                    </Grid>
                </StackPanel>

                <!-- Liste mit Kanälen. IsItemClickEnabled muss aktiviert sein, sonst funktioniert das Binding mittels der Behaviour SDK nicht.-->
                <ListView Grid.Row="1"
                          Margin="19,5,19,0"
                          HorizontalContentAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          IsItemClickEnabled="True"
                          ItemTemplate="{StaticResource ChannelListItemStyle}"
                          ItemsSource="{Binding Channels}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding ChannelSelectedCommand}"
                                                              InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    
                </ListView>
                
            </Grid>

             <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
                          ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
                          IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
                                                              InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>

    </Grid>
</Page>
