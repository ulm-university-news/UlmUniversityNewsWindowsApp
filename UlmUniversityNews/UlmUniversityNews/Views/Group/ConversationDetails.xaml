<Page
    x:Class="UlmUniversityNews.Views.Group.ConversationDetails"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.Group"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <valueconverter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <valueconverter:ValidationMessageOnLocalizedStringConverter x:Key="ValidationMessageOnLocalizedStringConverter" />

        <!-- Data Template eines Eintrags einer Announcement-Ressource in der Detailansicht eines Kanals. -->
        <DataTemplate
            x:Key="ConversationMessageListItemStyle">
            <Grid RenderTransformOrigin="0.5, 0.5">
                <Grid.RenderTransform>
                    <RotateTransform  Angle="180"/>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- 1. Zeile: eigentliche Nachricht-->
                    <RowDefinition Height="Auto" />
                    <!-- 2.Zeile:  Seperator-->
                </Grid.RowDefinitions>

                <Grid
                    Background="{Binding Read, Converter={StaticResource MessageReadPropertyToBackgroundColorConverter}}"
                    Height="Auto"       
                    Margin="0,0,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- 1.Zeile für Announcement Titel und Datum -->
                        <RowDefinition Height="Auto" />
                        <!-- 2.Zeile für Inhalt der Nachricht -->
                    </Grid.RowDefinitions>

                    <!-- 1. Zeile -->
                    <!-- Grid für Announcement Titel und Datum.-->
                    <Grid
                    Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*" />
                            <!-- Spalte für Autor -->
                            <ColumnDefinition Width="*" />
                            <!-- Spalte für Datum -->
                        </Grid.ColumnDefinitions>

                        <!-- Author -->
                        <TextBlock
                            Grid.Column="0"
                            x:Name="ConversationMessageAuthor"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            TextAlignment="Left"
                            Style="{StaticResource HeaderTextInAnnouncementList}"
                            Text="{Binding AuthorName}" />

                        <!-- Datum -->
                        <TextBlock
                        Grid.Column="1"
                        x:Name="ConversationMessageCreationDate"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        Style="{StaticResource DateTimeFieldinList}"
                        Text="{Binding CreationDate, Converter={StaticResource DateTimeToStringConverter}}"/>

                    </Grid>

                    <!-- 2.Zeile -->
                    <!-- Nachrichteninhalt -->
                    <TextBlock
                    Grid.Row="1"
                    x:Name="ConversationMessageContent"
                    Style="{StaticResource TextInAnnouncementList}"
                    common:HyperLinkedTextBlock.Text="{Binding Text}" />
                </Grid>

                <!-- 3. Zeile Sepeartor-->
                <Line 
                    Grid.Row="1"
                    Margin="-5, 5, 0, 10"
                    Visibility="{Binding IsLatestMessage, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse'}"
                    Style="{StaticResource EnumerationOfPropertiesSeperatorStyle}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="ChannelSettingsCommandBar"
						Foreground="{StaticResource UNUCommandBarButtonColor}"
						Background="{StaticResource UUNConversationColor}">
            <AppBarButton 
                x:Name="ConversationDetailsSynchronizeButton"
                x:Uid="ConversationDetailsSynchronizeButton"
                Icon="Sync"
                Label="aktualisieren"
                Command="{Binding SynchronizeMessagesCommand}"
                />
            <AppBarButton 
                x:Name="ConversationDetailsEditConversationButton"
                x:Uid="ConversationDetailsEditConversationButton"
                Icon="Edit"
                Label="bearbeiten"
                Visibility="{Binding ElementName=ConversationDetailsEditConversationButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding SwitchToEditConversationDialogCommand}"
                />
            <AppBarButton
                x:Name="ConversationDetailsSendMessageButton"
                x:Uid="ConversationDetailsSendMessageButton"
                Icon="Send"
                Label="senden"
                Command="{Binding SendMessageCommand}"
                />
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}" Background="{StaticResource UUNConversationColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!-- Drawer Text -->
                <TextBlock Grid.Column="0"
						   x:Uid="ConversationDetailsConversationTitle"
						   Style="{StaticResource DrawerTextStyle}"
						   Text="{Binding SelectedConversation.Title}" />
                
                <!-- Conversation closed hint -->
                <TextBlock Grid.Column="1"
                           x:Uid="ConversationDetailsConverstionClosedHint"
                           Style="{StaticResource DrawerTextStyle}"
                           Visibility="{Binding SelectedConversation.IsClosed, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Text=""/>
            </Grid>
            
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Grid>
                    <Grid.RowDefinitions>
                        <!-- Für Nachrichtenauflistung. -->
                        <RowDefinition Height="*" />
                        <!-- Für Eingabefeld. -->
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                        <!-- Liste mit Konversationsnachrichten. -->
                    <Grid Grid.Row="0"
                          Margin="19, 10, 19, 10">
                        <ListView
                                x:Name="ConversationMessageList"
                                ItemTemplate="{StaticResource ConversationMessageListItemStyle}"
                                ItemsSource="{Binding ConversationMessages}"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsItemClickEnabled="False"
                                RenderTransformOrigin="0.5, 0.5"
                                ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListView.RenderTransform>
                                <RotateTransform x:Name="ConversationMessagesListRotation" Angle="180"/>
                            </ListView.RenderTransform>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
  
                    <!-- Eingabefeld -->
                    <Grid Grid.Row="1" 
                                Background="{StaticResource UniUlmAccentColorElementBackground}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBox
                            Grid.Row="0"
                            x:Name="ConversationDetailsMessageInputBox"
                            x:Uid="ConversationDetailsMessageInputBox"
                            TextWrapping="Wrap"
                            PlaceholderText="Enter message"
                            AcceptsReturn="True"
                            Margin="19, 10, 19, 10"
                            Background="White"
                            Text="{Binding EnteredMessage, Mode=TwoWay}" />

                        <TextBlock 
                            Grid.Row="1"
                            x:Name="ConversationMessageDetailsTextValidationError"
                            Margin="19, 10, 19, 10"
                            Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                            Visibility="{Binding ElementName=ConversationMessageDetailsTextValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                            Text="{Binding ValidationMessages[Text], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"
                            />

                    </Grid>

                </Grid>
            </Grid>


            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
							  ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
							  IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
																  InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>
        
    </Grid>
</Page>
