<Page
    x:Class="UlmUniversityNews.Views.Group.AddAndEditConversationDialog.AddAndEditConversation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.Group.AddAndEditConversationDialog"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:ValidationMessageOnLocalizedStringConverter x:Key="ValidationMessageOnLocalizedStringConverter" />
        <valueconverter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <valueconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StatusBarInformationToLocalizedStringConverter}}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="ChannelSettingsCommandBar"
						Foreground="{StaticResource UNUCommandBarButtonColor}"
						Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton 
                x:Name="AddAndEditConversationAddConversationButton"
                x:Uid="AddAndEditConversationAddConversationButton"
                Visibility="{Binding IsAddDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                Icon="Accept"
                Label="anlegen"
                Command="{Binding AddConversationCommand}"
                />
            <AppBarButton 
                x:Name="AddAndEditConversationEditConversationButton"
                x:Uid="AddAndEditConversationEditConversationButton"
                Visibility="{Binding IsEditDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                Icon="Save"
                Label="speichern"
                Command="{Binding EditConversationCommand}"
                />
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Drawer Text - Add dialog -->
                <TextBlock Grid.Column="0"
						   x:Uid="AddAndEditConversationAddDialogTitle"
						   Style="{StaticResource DrawerTextStyle}"
                           Visibility="{Binding IsAddDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
						   Text="Konversation anlegen" />
                
                <!-- Drawer Text - Edit Dialog -->
                <TextBlock Grid.Column="0"
                           Style="{StaticResource DrawerTextStyle}"
                           Visibility="{Binding IsEditDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Text="{Binding EditableConversation.Title, FallbackValue='Edit conversation', TargetNullValue='Edit conversation'}"
                           />

                <!-- Conversation closed hint. -->
                <TextBlock Grid.Column="1"
						   x:Uid="AddAndEditConversationIsClosedHint"
						   Style="{StaticResource DrawerTextStyle}"
                           Visibility="{Binding EditableConversation.IsClosed, FallbackValue=Collapsed, TargetNullValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"
						   Text="(geschlossen)" />
            </Grid>
            
            
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Grid>
                    <ScrollViewer>
                        <Grid Style="{StaticResource PivotLikeGridStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <!-- Erstellung: Beschreibung. -->
                            <TextBlock
                                Grid.Row="0"
                                x:Name="AddAndEditConversationCreateConversationDesc"
                                x:Uid="AddAndEditConversationCreateConversationDesc"
                                Style="{StaticResource UniversityNewsUlmStandardText}"
                                Visibility="{Binding IsAddDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Text="Hier können Sie neue Konversationen erstellen. Konversationen sind Gruppenchats, die unter einem bestimmten Thema laufen. Geben Sie den Titel Ihrer Konversation an."
                                />
                            
                            <!-- Beschreibung Änderungsdialog. -->
                            <TextBlock 
                                Grid.Row="0"
                                x:Name="AddAndEditConversationEditConversationDesc"
                                x:Uid="AddAndEditConversationEditConversationDesc"
                                Style="{StaticResource UniversityNewsUlmStandardText}"
                                Visibility="{Binding IsEditDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Text=""
                                />

                            <!-- Eingabefeld Titel-->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.Row="0"
                                    x:Name="AddAndEditConversationTitleInputBox"
                                    x:Uid="AddAndEditConversationTitleInputBox"
                                    Header="Titel *"
                                    Text="{Binding EnteredTitle, Mode=TwoWay}"
                                    />

                                <!-- Validation Error-->
                                <TextBlock 
                                    Grid.Row="1"
                                    x:Name="AddAndEditConversationTitleValidationError"
                                    Style="{StaticResource UniversityNewsUlmStandardErrorText}"
                                    Visibility="{Binding ElementName=AddAndEditConversationTitleValidationError, Path=Text, Converter={StaticResource StringToVisibilityConverter}}"
                                    Text="{Binding ValidationMessages[Title], TargetNullValue='', FallbackValue='', Converter={StaticResource ValidationMessageOnLocalizedStringConverter}}"                             
                                    />
                            </Grid>

                            <!-- Konversation geschlossen Check Box-->
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <CheckBox 
                                    Grid.Row="0"
                                    x:Name="AddAndEditConversationIsClosedCheckBox"
                                    x:Uid="AddAndEditConversationIsClosedCheckBox"
                                    Visibility="{Binding IsEditDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Content="Konversation schließen"
                                    IsChecked="{Binding IsClosedChecked, Mode=TwoWay}"
                                />

                                <TextBlock 
                                    Grid.Row="1"
                                    x:Name="AddAndEditConversationCloseConversationWarning"
                                    x:Uid="AddAndEditConversationCloseConversationWarning"
                                    Style="{StaticResource UniversityNewsUlmStandardText}"
                                    Visibility="{Binding ElementName=AddAndEditConversationIsClosedCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Text="Wenn Sie diese Konversation schließen, können dort keine weiteren Nachrichten gesendet werden. Möchten Sie die Konversation wirklich schließen?"
                                 />

                            </Grid>
                            
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Grid>

            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <!-- Flyout für Warnung "Dialog verlassen." -->
                <FlyoutBase.AttachedFlyout>
                    <Flyout                    
                        FlyoutPresenterStyle="{StaticResource ResourceKey=FlyoutStyle}"
                            common:FlyoutHelper.IsOpen="{Binding IsFlyoutOpen, Mode=TwoWay}"
                            common:FlyoutHelper.Parent="{Binding ElementName=ListFragment}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                x:Uid="FlyoutWarningDialogCloseDescription"
                                Text="Achtung! Wenn Sie den Dialog verlassen werden die von Ihnen eingetragenen Daten gelöscht."
                                Style="{StaticResource TextInFlyoutsStyle}"/>
                            <Button
                                Grid.Row="1"
                                x:Uid="FlyoutWariningDialogCloseButton"
                                Content="Dialog verlassen"
                                Command="{Binding PerformOriginalDrawerMenuActionCommand}"
                                Margin="0,0,15,15"
                                HorizontalAlignment="Right" />
                        </Grid>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>

                <ListView     
                    x:Name="ListMenuItems"
					ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
					IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Öffne das Flyout beim Klick auf das Command. Übergibt den geklickten DrawerMenuEntry. -->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding ShowWarningFlyout}"
                                                      InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>

    </Grid>
</Page>
