<Page
    x:Class="UlmUniversityNews.Views.Group.SearchGroups"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UlmUniversityNews.Views.Group"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"	
	xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:common="using:UlmUniversityNews.Common"
	xmlns:valueconverter="using:UlmUniversityNews.Converters"
	xmlns:drawerLayout="using:DrawerLayout"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Konvertierung eines ItemClickEventArgs auf das geklickte Objekt. -->
        <valueconverter:ItemClickedConverter x:Key="ItemClickedConverter" />
        <valueconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Page.Resources>

    <!-- StatusBar -->
    <i:Interaction.Behaviors>
        <common:StatusBarBehavior IsVisible="True"
                                  ForegroundColor="White"
                                  BackgroundColor="Black"
                                  BackgroundOpacity="1.0" />
        <common:ProgressIndicatorBehavior IsVisible="{Binding IsProgressIndicatorVisible, UpdateSourceTrigger=PropertyChanged}"
                                          Value="{Binding ProgressIndicatorProgressValue, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding ProgressIndicatorText, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StatusBarInformationToLocalizedStringConverter}}"
                                          IsIndeterminate="{Binding IsIndeterminateProgressIndicator, UpdateSourceTrigger=PropertyChanged}" />
    </i:Interaction.Behaviors>

    <!-- CommandBar -->
    <Page.BottomAppBar>
        <CommandBar x:Name="ChannelSettingsCommandBar"
						Foreground="{StaticResource UNUCommandBarButtonColor}"
						Background="{StaticResource UniUlmMainBackgroundColor}">
            <AppBarButton 
                x:Name="SearchGroupsSearchButton"
                x:Uid="SearchGroupsSearchButton"
                Icon="Find"
                Label="gruppe suchen"
                Command="{Binding SearchGroupsCommand}"/>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelbereich - Drawer -->
        <Grid Grid.Row="0" Style="{StaticResource DrawerMenuTitleBar}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Drawer Icon -->
            <Image x:Name="DrawerIcon" 
					   Grid.Column="0"
					   Style="{StaticResource DrawerIconStyle}"
					   Tapped="DrawerIcon_Tapped" />

            <!-- Drawer Text -->
            <TextBlock Grid.Column="1"
						   x:Uid="SearchGroupsDrawerTitle"
						   Style="{StaticResource DrawerTextStyle}"
						   Text="Gruppensuche" />
        </Grid>

        <!--Inhalt der Seite und Inhalt des Drawer Menü-->
        <drawerLayout:DrawerLayout Grid.Row="1" x:Name="DrawerLayout">

            <!-- Inhalt der Seite -->
            <Grid x:Name="MainFragment" Background="{StaticResource MainFragmentBackgroundColor}">
                <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Steuerungselemente in Grid Element 0. Definiere für Steuerungselemte eigenes Grid. -->
                        <Grid Grid.Row="0"
                              Background="{StaticResource UniUlmAccentColorElementBackground}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Suche nach ... ComboBox und Button zum Suchen.-->
                            <Grid Grid.Row="0" Margin="19, 0, 19, 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- 1. Spalte -->
                                <ComboBox Grid.Row="0"
                                          SelectedIndex="0">
                                    <ComboBoxItem x:Name="SearchGroupsSearchOptionName"
                                                  x:Uid="SearchGroupsSearchOptionName"
                                                  Content="Suche nach Name"
                                                  IsSelected="{Binding SearchForNameEnabled, Mode=TwoWay}"/>
                                    <ComboBoxItem x:Name="SearchGroupsSearchOptionId"
                                                  x:Uid="SearchGroupsSearchOptionId"
                                                  Content="Suche nach Id"
                                                  IsSelected="{Binding SearchForIdEnabled, Mode=TwoWay}"/>
                                </ComboBox>
                            </Grid>
                            
                            <!-- Option Name gewählt. -->
                            <Grid Grid.Row="1" Margin="19, -5, 19, 0"
                                  Visibility="{Binding SearchForNameEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0"
                                             x:Name="SearchGroupsTypeOptionWorkingGroup"
                                             x:Uid="SearchGroupsTypeOptionWorkingGroup"
                                             Content="Arbeitsgruppe"
                                             IsChecked="{Binding WorkingGroupSelected, Mode=TwoWay}"
                                          />
                                <CheckBox Grid.Column="1"
                                             x:Name="SearchGroupsTypeOptionTutorialGroup"
                                             x:Uid="SearchGroupsTypeOptionTutorialGroup"
                                             Content="Tutoriumsgruppe"
                                             IsChecked="{Binding TutorialGroupSelected, Mode=TwoWay}"
                                          />
                            </Grid>
                            
                            <!-- Eingabefeld. -->
                        <TextBox 
                            Grid.Row="2"
                            Margin="19, 0, 19, 10"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            x:Name="SearchGroupsInputBox"
                            InputScope="Search" 
                            Background="White"
                            KeyDown="SearchGroupsInputBox_KeyDown"
                            Text="{Binding SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                        </Grid>

                    <ScrollViewer Grid.Row="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       x:Name="GroupSearchEmptyResultInfo"
                                       x:Uid="GroupSearchEmptyResultInfo"
                                       Style="{StaticResource UniversityNewsUlmStandardText}"
                                       Margin="19,19,19,19"
                                       Visibility="{Binding HasEmptySearchResult, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       />

                            <!-- Liste mit Gruppen. IsItemClickEnabled muss aktiviert sein, sonst funktioniert das Binding mittels der Behaviour SDK nicht.-->
                            <ListView Grid.Row="1"
                                Margin="19,5,19,0"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsItemClickEnabled="True"
                                ItemTemplate="{StaticResource GroupListItemStyle}"
                                ItemsSource="{Binding Groups}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <!-- Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ItemClick">
                                        <core:InvokeCommandAction Command="{Binding GroupSelectedCommand}"
                                                                  InputConverter="{StaticResource ItemClickedConverter}" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>

                            </ListView>
                        </Grid>
                    </ScrollViewer>
                </Grid>
                
            </Grid>

            <!--Inhalt des Drawer Menüs-->
            <Grid x:Name="ListFragment" Background="{StaticResource DrawerMenuContentPanelBackgroundColor}">
                <ListView x:Name="ListMenuItems"
							  ItemTemplate="{StaticResource DrawerMenuEntryDataTemplate}"
							  IsItemClickEnabled="True">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <!--Bind auf Command mittels Behaviour. Event vom Klick auf ein Item wird auf Command abgebildet.-->
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding DrawerButtonCommand}"
																  InputConverter="{StaticResource ItemClickedConverter}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </Grid>

        </drawerLayout:DrawerLayout>
    </Grid>
</Page>
